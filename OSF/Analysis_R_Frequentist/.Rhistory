# clear directory
rm(list=ls())
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library(tidyverse) # version 1.3.1
library(ez) # version 4.4-0
library(effectsize) # 0.4.5
# load relevant functions
source("functions/mySummary.R")
source("functions/tracedEZout.R")
# set some relevant setting
options(scipen = 999)
#Experiment data (after some preprocessing, e.g. removing participants with too many omissions)
load(file="input/amateurs_PROMS_preprocessed.RData")
P2 <- P # rename the dataset P2
load(file="input/orig_data_Nussbaum2024/PROMS_preprocessed.RData")
## merging data sets
# make amateurs into one group ("A")
P2$Group[P2$Group=="2"] <-"A"
P2$Group[P2$Group=="1"] <-"A"
P2 <- P2 %>% mutate(Group = as.factor(Group))
# merge
P <- rbind(P, P2)
# change group for participant with music degree to professionals
P$Group[P$Code=="AEB56L"] <- "M"
save(P, file="input/allgroups_PROMS_preprocessed.RData")
rm(P2)
P$Hits <- ifelse(P$Same == "DS" & P$Resp== 1, 1, 0)
P$Hits <- ifelse(P$Same == "DD", NA, P$Hits)
P$CR <- ifelse(P$Same == "DD" & P$Resp == 1, 1, 0)
P$CR <- ifelse(P$Same == "DS", NA, P$CR)
P$Miss <- ifelse(P$Same == "DS" & P$Resp== 0, 1, 0)
P$Miss <- ifelse(P$Same == "DD", NA, P$Miss)
P$FA <- ifelse(P$Same == "DD" & P$Resp== 0, 1, 0)
P$FA <- ifelse(P$Same == "DS", NA, P$FA)
P$Sure <- ifelse(P$Response == 1 | P$Response == 5, 1,0)  # all responses where participants were "sure"
P$Unsure <- ifelse(P$Response == 2 | P$Response == 4, 1,0) # all responses where participants were "unsure"
P$DontKnow <- ifelse(P$Response == 3, 1,0) # all responses where participants responded with "don't know"
View(P)
table(P$DontKnow, P$Group)
chisq.test(P$DontKnow, P$Group)
# clear directory
rm(list=ls())
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library(tidyverse) # version 1.3.1
library(ez) # version 4.4-0
library(effectsize) # 0.4.5
# load relevant functions
source("functions/mySummary.R")
# set some relevant setting
options(scipen = 999)
load(file="input/amateurs_PROMS_preprocessed.RData")
# remove participant with degree in music science
P <- subset(P, Code!="AEB56L") # instrumentalist
P$Hits <- ifelse(P$Same == "DS" & P$Resp== 1, 1, 0)
P$Hits <- ifelse(P$Same == "DD", NA, P$Hits)
P$CR <- ifelse(P$Same == "DD" & P$Resp == 1, 1, 0)
P$CR <- ifelse(P$Same == "DS", NA, P$CR)
P$Miss <- ifelse(P$Same == "DS" & P$Resp== 0, 1, 0)
P$Miss <- ifelse(P$Same == "DD", NA, P$Miss)
P$FA <- ifelse(P$Same == "DD" & P$Resp== 0, 1, 0)
P$FA <- ifelse(P$Same == "DS", NA, P$FA)
P$Sure <- ifelse(P$Response == 1 | P$Response == 5, 1,0)  # all responses where participants were "sure"
P$Unsure <- ifelse(P$Response == 2 | P$Response == 4, 1,0) # all responses where participants were "unsure"
P$DontKnow <- ifelse(P$Response == 3, 1,0) # all responses where participants responded with "don't know"
P$Hits_c <- ifelse(P$Hits == 1 & P$Unsure == 1, 0.5, P$Hits)
table(P$Hits_c, P$Hits)
P$FA_c <- ifelse(P$FA == 1 & P$Unsure == 1, 0.5, P$FA)
table(P$FA_c, P$FA)
#extract SameTrials and recode them
DS <- P %>% filter(Same == "DS")
DS$Confidence <-  recode(DS$Response, `1` = 1, `2` = 0.75, `3` = 0.5,  `4` = 0.25, `5` = 0)
#extract Different Trials and recode them
DD <- P %>% filter(Same == "DD")
DD$Confidence <-  recode(DD$Response, `1` = 0, `2` = 0.25, `3` = 0.5,  `4` = 0.75, `5` = 1)
P2 <- rbind(DD, DS)
P2$Confidence <- P2$Confidence - 0.5
P <- merge(P, P2)
rm(P2, DS, DD)
P_agg <- P %>% group_by(Code, Group, Test) %>% summarise(Resp = sum(Resp),
Hits = mean(Hits_c, na.rm= TRUE),
CR = mean(CR, na.rm=TRUE),
Miss = mean(Miss, na.rm= TRUE),
FA = mean(FA_c, na.rm=TRUE),
Sure = sum(Sure),
Unsure = sum(Unsure),
DontKnow = sum(DontKnow),
Confidence = mean(Confidence),
N = length(Trialno)) # should always be 18
P_agg$Hits <- ifelse(P_agg$Hits == 1, (90-0.5)/90, P_agg$Hits)
P_agg$FA <- ifelse(P_agg$FA == 0, 0.5/90, P_agg$FA)
P_agg$FA <- ifelse(P_agg$FA == 1, (90-0.5)/90, P_agg$FA)
P_agg$Hz <- qnorm(P_agg$Hits)
P_agg$FAz <- qnorm(P_agg$FA)
#calculate d-prime and criterion
#d-prime
P_agg$dprime <- P_agg$Hz - P_agg$FAz
#criterion
P_agg$crit <- (-0.5*(P_agg$Hz + P_agg$FAz))
B <- as.data.frame(P_agg)
rm(P_agg)
B$Group <- as.factor(B$Group)
# extract descriptive data
DPrime_summary <- mySummary(B, dprime, Group, Test)
Confidence_summary <- mySummary(B, Confidence, Group, Test)
capture.output(as.matrix(DPrime_summary), as.matrix(Confidence_summary), file="output/musicality/amateurs_PROMS_summary_dprime_and_confidence.txt")
rm(DPrime_summary, Confidence_summary )
# run a simple t-test on d-prime
melody <- t.test(data = B[B$Test == "melody",], dprime ~ Group)
d_melody <- t_to_d(melody$statistic, melody$parameter, paired = FALSE)
pitch <- t.test(data = B[B$Test == "pitch",], dprime ~ Group)
d_pitch <- t_to_d(pitch$statistic, pitch$parameter, paired = FALSE)
timbre <- t.test(data = B[B$Test == "timbre",], dprime ~ Group)
d_timbre <- t_to_d(timbre$statistic, timbre$parameter, paired = FALSE)
rhythm <- t.test(data = B[B$Test == "rhythm",], dprime ~ Group)
d_rhythm <- t_to_d(rhythm$statistic, rhythm$parameter, paired = FALSE)
# run a simple t-test on mean Resp Accuracy
melodyII <- t.test(data = B[B$Test == "melody",], Resp ~ Group)
pitchII <- t.test(data = B[B$Test == "pitch",], Resp ~ Group)
timbreII <- t.test(data = B[B$Test == "timbre",], Resp ~ Group)
rhythmII <- t.test(data = B[B$Test == "rhythm",], Resp ~ Group)
# run a simple t-test on the criterion
melodyIII <- t.test(data = B[B$Test == "melody",], crit ~ Group)
pitchIII <- t.test(data = B[B$Test == "pitch",], crit ~ Group)
timbreIII <- t.test(data = B[B$Test == "timbre",], crit ~ Group)
rhythmIII <- t.test(data = B[B$Test == "rhythm",], crit ~ Group)
# run a simple t-test on the number of "unsure"-responses
melodyIV <- t.test(data = B[B$Test == "melody",], Unsure ~ Group)
pitchIV <- t.test(data = B[B$Test == "pitch",], Unsure ~ Group)
timbreIV <- t.test(data = B[B$Test == "timbre",], Unsure ~ Group)
rhythmIV <- t.test(data = B[B$Test == "rhythm",], Unsure ~ Group)
melodyIV
pitchIV
timbreIV
rhythmIV
# run a simple t-test on the number of "DontKnow"-responses
melodyV <- t.test(data = B[B$Test == "melody",], DontKnow ~ Group)
pitchV <- t.test(data = B[B$Test == "pitch",], DontKnow ~ Group)
timbreV <- t.test(data = B[B$Test == "timbre",], DontKnow ~ Group)
rhythmV <- t.test(data = B[B$Test == "rhythm",], DontKnow ~ Group)
melodyV
pitchV
timbreV
rhythmV
# clear directory
rm(list=ls())
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library(tidyverse) # version 1.3.1
library(ez) # version 4.4-0
library(effectsize) # 0.4.5
# load relevant functions
source("functions/mySummary.R")
source("functions/tracedEZout.R")
# set some relevant setting
options(scipen = 999)
#Experiment data (after some preprocessing, e.g. removing participants with too many omissions)
load(file="input/amateurs_PROMS_preprocessed.RData")
P2 <- P # rename the dataset P2
load(file="input/orig_data_Nussbaum2024/PROMS_preprocessed.RData")
## merging data sets
# make amateurs into one group ("A")
P2$Group[P2$Group=="2"] <-"A"
P2$Group[P2$Group=="1"] <-"A"
P2 <- P2 %>% mutate(Group = as.factor(Group))
# merge
P <- rbind(P, P2)
# change group for participant with music degree to professionals
P$Group[P$Code=="AEB56L"] <- "M"
save(P, file="input/allgroups_PROMS_preprocessed.RData")
rm(P2)
P$Hits <- ifelse(P$Same == "DS" & P$Resp== 1, 1, 0)
P$Hits <- ifelse(P$Same == "DD", NA, P$Hits)
P$CR <- ifelse(P$Same == "DD" & P$Resp == 1, 1, 0)
P$CR <- ifelse(P$Same == "DS", NA, P$CR)
P$Miss <- ifelse(P$Same == "DS" & P$Resp== 0, 1, 0)
P$Miss <- ifelse(P$Same == "DD", NA, P$Miss)
P$FA <- ifelse(P$Same == "DD" & P$Resp== 0, 1, 0)
P$FA <- ifelse(P$Same == "DS", NA, P$FA)
P$Sure <- ifelse(P$Response == 1 | P$Response == 5, 1,0)  # all responses where participants were "sure"
P$Unsure <- ifelse(P$Response == 2 | P$Response == 4, 1,0) # all responses where participants were "unsure"
P$DontKnow <- ifelse(P$Response == 3, 1,0) # all responses where participants responded with "don't know"
P$Hits_c <- ifelse(P$Hits == 1 & P$Unsure == 1, 0.5, P$Hits)
table(P$Hits_c, P$Hits)
P$FA_c <- ifelse(P$FA == 1 & P$Unsure == 1, 0.5, P$FA)
table(P$FA_c, P$FA)
#extract SameTrials and recode them
DS <- P %>% filter(Same == "DS")
DS$Confidence <-  recode(DS$Response, `1` = 1, `2` = 0.75, `3` = 0.5,  `4` = 0.25, `5` = 0)
#extract Different Trials and recode them
DD <- P %>% filter(Same == "DD")
DD$Confidence <-  recode(DD$Response, `1` = 0, `2` = 0.25, `3` = 0.5,  `4` = 0.75, `5` = 1)
P2 <- rbind(DD, DS)
P2$Confidence <- P2$Confidence - 0.5
P <- merge(P, P2)
rm(P2, DS, DD)
P_agg <- P %>% group_by(Code, Group, Test) %>% summarise(Resp = sum(Resp),
Hits = mean(Hits_c, na.rm= TRUE),
CR = mean(CR, na.rm=TRUE),
Miss = mean(Miss, na.rm= TRUE),
FA = mean(FA_c, na.rm=TRUE),
Sure = sum(Sure),
Unsure = sum(Unsure),
DontKnow = sum(DontKnow),
Confidence = mean(Confidence),
N = length(Trialno)) # should always be 18
P_agg$Hits <- ifelse(P_agg$Hits == 1, (90-0.5)/90, P_agg$Hits)
P_agg$FA <- ifelse(P_agg$FA == 0, 0.5/90, P_agg$FA)
P_agg$FA <- ifelse(P_agg$FA == 1, (90-0.5)/90, P_agg$FA)
P_agg$Hz <- qnorm(P_agg$Hits)
P_agg$FAz <- qnorm(P_agg$FA)
#calculate d-prime and criterion
#d-prime
P_agg$dprime <- P_agg$Hz - P_agg$FAz
#criterion
P_agg$crit <- (-0.5*(P_agg$Hz + P_agg$FAz))
B <- as.data.frame(P_agg)
rm(P_agg)
B$Group <- as.factor(B$Group)
# extract descriptive data
DPrime_summary <- mySummary(B, dprime, Group, Test)
Confidence_summary <- mySummary(B, Confidence, Group, Test)
Confidence_summary_2 <- mySummary(B, Confidence, Group)
# mixed ANOVA on Confidence for Group x PROMS-SubTest
a <- ezANOVA(data=B, dv=.(Confidence), wid = Code, within = Test, between = .(Group), type=3, detailed = TRUE)
b = tracedEzOut(a, print = TRUE, sph.cor = "HF", mau.p = 0.05, etasq = "partial", dfsep = ", ")
o2 <- F_to_omega2(unlist(c(a$ANOVA[6])),  unlist(c(a$ANOVA[2])),  unlist(c(a$ANOVA[3])), ci = 0.95, alternative = "two.sided")   # enter F, df1, df2
## Main Effect Group (Confidence)
# perform pairwise t-tests on Confidence, Bonferroni-corrected a-level: .05/3 = .0167
MA <- B %>% filter(Group == "M" | Group == "A") %>% t.test(data = ., Confidence ~ Group)
d_MA <- t_to_d(MA$statistic, MA$parameter, paired = FALSE)
MC <- B %>% filter(Group == "M" | Group == "C") %>% t.test(data = ., Confidence ~ Group)
d_MC <- t_to_d(MC$statistic, MC$parameter, paired = FALSE)
AC <- B %>% filter(Group == "A" | Group == "C") %>% t.test(data = ., Confidence ~ Group)
d_AC <- t_to_d(AC$statistic, AC$parameter, paired = FALSE)
## Main Effect Subtest (Confidence)
# perform pairwise t-tests on Confidence, Bonferroni-corrected a-level: .05/6 = .008
melpit <- B %>% filter(Test == "melody" | Test == "pitch") %>% t.test(data = ., Confidence ~ Test)
d_melpit <- t_to_d(melpit$statistic, melpit$parameter, paired = FALSE)
melrhy <- B %>% filter(Test == "melody" | Test == "rhythm") %>% t.test(data = ., Confidence ~ Test)
d_melrhy <- t_to_d(melrhy$statistic, melrhy$parameter, paired = FALSE)
meltim <- B %>% filter(Test == "melody" | Test == "timbre") %>% t.test(data = ., Confidence ~ Test)
d_meltim <- t_to_d(meltim$statistic, meltim$parameter, paired = FALSE)
pitrhy <- B %>% filter(Test == "pitch" | Test == "rhythm") %>% t.test(data = ., Confidence ~ Test)
d_pitrhy <- t_to_d(pitrhy$statistic, pitrhy$parameter, paired = FALSE)
pittim <- B %>% filter(Test == "pitch" | Test == "timbre") %>% t.test(data = ., Confidence ~ Test)
d_pittim <- t_to_d(pittim$statistic, pittim$parameter, paired = FALSE)
rhytim <- B %>% filter(Test == "rhythm" | Test == "timbre") %>% t.test(data = ., Confidence ~ Test)
d_rhytim <- t_to_d(rhytim$statistic, rhytim$parameter, paired = FALSE)
# info to read output easier
info <- c("dprime descriptives","Confidence descriptives","Confidence: ANOVA","Confidence: Group differences",
"Professionals vs Amateurs","Professionals vs NonMusicians","Amateurs vs NonMusicians",
"melody vs pitch","melody vs rhythm","melody vs timbre",
"pitch vs rhythm","pitch vs timbre","rhythm vs timbre")
# capture output
capture.output(info[1], as.matrix(DPrime_summary), info[2], as.matrix(Confidence_summary), as.matrix(Confidence_summary_2),
info[3], b, o2, info[4],info[5], MA, d_MA, info[6], MC, d_MC,info[7], AC, d_AC,
info[8],melpit,d_melpit, info[9],melrhy,d_melrhy,info[10],meltim,d_meltim,
info[11],pitrhy,d_pitrhy,info[12],pittim,d_pittim, info[13],rhytim,d_rhytim,
file="output/musicality/allgroups_PROMS_summary_dprime_and_confidence.txt")
rm(DPrime_summary, Confidence_summary, Confidence_summary_2,
info, a, b, o2, MA, d_MA, MC, d_MC,AC, d_AC,melpit,d_melpit, melrhy,d_melrhy,meltim,d_meltim, pitrhy,d_pitrhy,pittim,d_pittim, rhytim,d_rhytim)
melody <- B %>% filter(Test == "melody")
ANOVAModel <- ezANOVA(data=melody, wid=Code, dv=Confidence, between= Group, type =3, detailed=TRUE)
mel = tracedEzOut(ANOVAModel, print = TRUE, sph.cor = "HF", mau.p = 0.05, etasq = "partial", dfsep = ", ")
o2_mel <- F_to_omega2(unlist(c(ANOVAModel$ANOVA[6])),  unlist(c(ANOVAModel$ANOVA[2])),  unlist(c(ANOVAModel$ANOVA[3])), ci = 0.95, alternative = "two.sided")   # enter F, df1, df2
# perform pairwise t-tests, Bonferroni-corrected a-level: .05/3 = .0167
MA_mel <- melody %>% filter(Group == "M" | Group == "A") %>% t.test(data = ., Confidence ~ Group)
d_MA_mel <- t_to_d(MA_mel$statistic, MA_mel$parameter, paired = FALSE)
MC_mel <- melody %>% filter(Group == "M" | Group == "C") %>% t.test(data = ., Confidence ~ Group)
d_MC_mel <- t_to_d(MC_mel$statistic, MC_mel$parameter, paired = FALSE)
AC_mel <- melody %>% filter(Group == "A" | Group == "C") %>% t.test(data = ., Confidence ~ Group)
d_AC_mel <- t_to_d(AC_mel$statistic, AC_mel$parameter, paired = FALSE)
pitch <- B %>% filter(Test == "pitch")
ANOVAModel <- ezANOVA(data=pitch, wid=Code, dv=Confidence, between= Group, type =3, detailed=TRUE)
pit = tracedEzOut(ANOVAModel, print = TRUE, sph.cor = "HF", mau.p = 0.05, etasq = "partial", dfsep = ", ")
o2_pit <- F_to_omega2(unlist(c(ANOVAModel$ANOVA[6])),  unlist(c(ANOVAModel$ANOVA[2])),  unlist(c(ANOVAModel$ANOVA[3])), ci = 0.95, alternative = "two.sided")   # enter F, df1, df2
# perform pairwise t-tests, Bonferroni-corrected a-level: .05/3 = .0167
MA_pit <- pitch %>% filter(Group == "M" | Group == "A") %>% t.test(data = ., Confidence ~ Group)
d_MA_pit <- t_to_d(MA_pit$statistic, MA_pit$parameter, paired = FALSE)
MC_pit <- pitch %>% filter(Group == "M" | Group == "C") %>% t.test(data = ., Confidence ~ Group)
d_MC_pit <- t_to_d(MC_pit$statistic, MC_pit$parameter, paired = FALSE)
AC_pit <- pitch %>% filter(Group == "A" | Group == "C") %>% t.test(data = ., Confidence ~ Group)
d_AC_pit <- t_to_d(AC_pit$statistic, AC_pit$parameter, paired = FALSE)
timbre <- B %>% filter(Test == "timbre")
ANOVAModel <- ezANOVA(data=timbre, wid=Code, dv=Confidence, between= Group, type =3, detailed=TRUE)
tim = tracedEzOut(ANOVAModel, print = TRUE, sph.cor = "HF", mau.p = 0.05, etasq = "partial", dfsep = ", ")
o2_tim <- F_to_omega2(unlist(c(ANOVAModel$ANOVA[6])),  unlist(c(ANOVAModel$ANOVA[2])),  unlist(c(ANOVAModel$ANOVA[3])), ci = 0.95, alternative = "two.sided")   # enter F, df1, df2
# perform pairwise t-tests, Bonferroni-corrected a-level: .05/3 = .0167
MA_tim <- timbre %>% filter(Group == "M" | Group == "A") %>% t.test(data = ., Confidence ~ Group)
d_MA_tim <- t_to_d(MA_tim$statistic, MA_tim$parameter, paired = FALSE)
MC_tim <- timbre %>% filter(Group == "M" | Group == "C") %>% t.test(data = ., Confidence ~ Group)
d_MC_tim <- t_to_d(MC_tim$statistic, MC_tim$parameter, paired = FALSE)
AC_tim <- timbre %>% filter(Group == "A" | Group == "C") %>% t.test(data = ., Confidence ~ Group)
d_AC_tim <- t_to_d(AC_tim$statistic, AC_tim$parameter, paired = FALSE)
rhythm <- B %>% filter(Test == "rhythm")
ANOVAModel <- ezANOVA(data=rhythm, wid=Code, dv=Confidence, between= Group, type =3, detailed=TRUE)
rhy = tracedEzOut(ANOVAModel, print = TRUE, sph.cor = "HF", mau.p = 0.05, etasq = "partial", dfsep = ", ")
o2_rhy <- F_to_omega2(unlist(c(ANOVAModel$ANOVA[6])),  unlist(c(ANOVAModel$ANOVA[2])),  unlist(c(ANOVAModel$ANOVA[3])), ci = 0.95, alternative = "two.sided")   # enter F, df1, df2
# perform pairwise t-tests, Bonferroni-corrected a-level: .05/3 = .0167
MA_rhy <- rhythm %>% filter(Group == "M" | Group == "A") %>% t.test(data = ., Confidence ~ Group)
d_MA_rhy <- t_to_d(MA_rhy$statistic, MA_rhy$parameter, paired = FALSE)
MC_rhy <- rhythm %>% filter(Group == "M" | Group == "C") %>% t.test(data = ., Confidence ~ Group)
d_MC_rhy <- t_to_d(MC_rhy$statistic, MC_rhy$parameter, paired = FALSE)
AC_rhy <- rhythm %>% filter(Group == "A" | Group == "C") %>% t.test(data = ., Confidence ~ Group)
d_AC_rhy <- t_to_d(AC_rhy$statistic, AC_rhy$parameter, paired = FALSE)
#add descriptions for output:
info <- c("Confidence",
"Professionals vs Amateurs","Professionals vs NonMusicians","Amateurs vs NonMusicians")
# save output to textfile
capture.output(info[1], mel, o2_mel, info[2], MA_mel, d_MA_mel, info[3],MC_mel, d_MC_mel, info[4], AC_mel, d_AC_mel,
file="output/musicality/allgroups_PROMS_melody.txt")
#remove objects to keep environment tidy
rm(info,melody, mel, o2_mel, MA_mel, d_MA_mel,MC_mel, d_MC_mel, AC_mel, d_AC_mel)
# save all the t.test on pitch
#add descriptions for output:
info <- c("Confidence","Professionals vs Amateurs","Professionals vs NonMusicians","Amateurs vs NonMusicians")
# save output to textfile
capture.output(info[1], pit, o2_pit, info[2], MA_pit, d_MA_pit, info[3],MC_pit, d_MC_pit, info[4], AC_pit, d_AC_pit,
file="output/musicality/allgroups_PROMS_pitch.txt")
#remove objects to keep environment tidy
rm(info,pit,o2_pit, pitch,MA_pit, d_MA_pit,MC_pit, d_MC_pit, AC_pit, d_AC_pit)
#add descriptions for output:
info <- c("Confidence",
"Professionals vs Amateurs","Professionals vs NonMusicians","Amateurs vs NonMusicians")
# save output to textfile
capture.output(info[1], rhy, o2_rhy,info[2], MA_rhy, d_MA_rhy, info[3],MC_rhy, d_MC_rhy, info[4], AC_rhy, d_AC_rhy,
file="output/musicality/allgroups_PROMS_rhythm.txt")
#remove objects to keep environment tidy
rm(info,rhy,o2_rhy, rhythm, MA_rhy, d_MA_rhy,MC_rhy, d_MC_rhy, AC_rhy, d_AC_rhy)
#add descriptions for output:
info <- c("Confidence",
"Professionals vs Amateurs","Professionals vs NonMusicians","Amateurs vs NonMusicians")
# save output to textfile
capture.output(info[1], tim,o2_tim, info[2], MA_tim, d_MA_tim, info[3],MC_tim, d_MC_tim, info[4], AC_tim, d_AC_tim,
file="output/musicality/allgroups_PROMS_timbre.txt")
#remove objects to keep environment tidy
rm(info,tim, o2_tim,timbre, MA_tim, d_MA_tim,MC_tim, d_MC_tim, AC_tim, d_AC_tim)
rm(ANOVAModel)
# save the prepared dataset for further analyses
PROMS <- B
save(PROMS, file="input/allgroups_PROMS_prepared.RData")
