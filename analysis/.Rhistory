# clear directory
rm(list=ls())
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# clear directory
rm(list=ls())
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library(tidyverse) # version 1.3.1
library(ez) # version 4.4-0
library(effectsize) # 0.4.5
# load relevant functions
source("functions/tracedEZout.R")
source("functions/mySummary.R")
# set some relevant setting
options(scipen = 999)
#---------------------------------------------------------------------------------
#get the preprocessed data:
#Experiment data (after some preprocessing, e.g. removing participants with too many omissions)
load(file="input/amateurs_Exp_processed.RData")
#remove participant with a Degree in Music Science
D <- subset (D, Code!="AEB56L") # instrumentalist
#information comes from Psytoolkit-Coding
CB1 <- D %>% filter(CB == "CB1")
CB1$Emo_Resp <- recode_factor(CB1$Resp, `1` = "hap", `2` = "ple", `3` = "sad", `4` = "fea")
CB2 <- D %>% filter(CB == "CB2")
CB2$Emo_Resp <- recode_factor(CB2$Resp, `1` = "sad", `2` = "fea", `3` = "hap", `4` = "ple")
CB3 <- D %>% filter(CB == "CB3")
CB3$Emo_Resp <- recode_factor(CB3$Resp, `1` = "ple", `2` = "hap", `3` = "fea", `4` = "sad")
CB4 <- D %>% filter(CB == "CB4")
CB4$Emo_Resp <- recode_factor(CB4$Resp, `1` = "fea", `2` = "sad", `3` = "ple", `4` = "hap")
D <- rbind(CB1, CB2, CB3, CB4)
rm(CB1, CB2, CB3, CB4)
#save this dataset
save(D, file="input/Exp_processed_with_Resp.RData")
#---------------------------------------------------------------------------------#
#                        Analysis of Averaged Emotions                            #
#---------------------------------------------------------------------------------#
all <- D # copy of the data
#get average Trials only
D <- all %>% filter(Emo == "avg")
### average data for ANOVA
D <- D %>% group_by(Subject, Code, Group, Emo_Resp) %>% summarise(N = length(ACC))
## complete missing combinations: we need 4 rows per participant = 352
D <- as_tibble(D)
Codes <- D[,c(1:3)] %>% group_by(Subject, Code) %>% summarise(Group = unique(Group)) #copy the code information, because it will be lost in the next command
D <- D %>% complete(Subject,Emo_Resp)
D <- as.data.frame(D)
D$Group <- NULL
D$Code <- NULL
#assign Code/Group to each Subject again
D <- merge(D, Codes)
D$N <- ifelse(is.na(D$N), 0, D$N)
### Define variables as appropriate data class and drop levels of factors
D$Subject <- as.factor(as.character(D$Subject))
D$Group <- as.factor(as.character(D$Group))
D <-  droplevels(D)
total <- D %>% group_by(Subject) %>% summarise(total = sum(N))
# the amount of average trial each person has to classify
#(not equal for all participants due to randomization error during the experiment)
D <- merge(D, total)
D$Freq <- D$N/D$total
a<-ezANOVA(data=D, dv=.(Freq), wid=.(Subject), within = .(Emo_Resp), between = .(Group), type=3, detailed = TRUE)
b = tracedEzOut(a, print = TRUE, sph.cor = "HF", mau.p = 0.05, etasq = "partial", dfsep = ", ")
avg_desc <- mySummary(D, Freq, Emo_Resp, Group)
Fs <-  c(round(a$ANOVA[[6]], 5))[2:4]
Df <-  c(round(a$ANOVA[[2]], 5))[2:4]
Df2 <- c(round(a$ANOVA[[3]], 5))[2:4]
### calculate omega effect sizes:
o2_emo <- F_to_omega2(Fs,  Df,  Df2, ci = 0.95)   # enter F, df1, df2
# save output to textfile
capture.output(b, o2_emo, file = "output/emotion_classification/amateurs_B_ANOVA_Average.txt")
rm(a,b, o2_emo, Fs, Df, Df2)
# get the whole dataset back:
D <- all
## Calculate the number of responses for each emotion x mType combination, separately for participants
C <- D %>% group_by(Subject, Group, MType, Emo, Emo_Resp) %>% summarise(N = length(Emo))
View(D)
D <- D %>% filter(Emo != "avg")
View(D)
#calculate accuracy for all stimuli
stimuli <- D %>% group_by(Subject, filename, MType, Emo) %>% summarise(ACC = mean(ACC))
View(stimuli)
#calculate accuracy for all stimuli
stimuli <- D %>% group_by(filename, MType, Emo) %>% summarise(ACC = mean(ACC))
View(stimuli)
range <- summarise(stimuli, ACC, MType, Emo)
View(range)
range <- mySummary(stimuli, ACC, MType, Emo)
View(range)
low <- stimuli %>% filter(ACC < 0.25)
AVG <- C %>% filter(Emo == "avg") # treat averaged Stimuli differently
View(low)
288/3
#calculate accuracy for all stimuli
stimuli2 <- D %>% group_by(filename, Group,  MType, Emo) %>% summarise(ACC = mean(ACC))
low2 <- stimuli2 %>% filter(ACC < 0.25)
View(low2)
28/288
2/96
View(low)
View(low2)
View(low)
# clear directory
rm(list=ls())
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library(tidyverse) # version 1.3.1
library(ez) # version 4.4-0
library(effectsize) # 0.4.5
# load relevant functions
source("functions/tracedEZout.R")
source("functions/mySummary.R")
# set some relevant setting
options(scipen = 999) # supresses the e^-notation
#Experiment data (after some preprocessing, e.g. removing participants with too many omissions)
load(file="input/amateurs_Exp_processed.RData")
#remove participant with a Degree in Music Science
D <- subset (D, Code!="AEB56L") # instrumentalist
View(D)
#NOT PUBLISHED
# clear directory
rm(list=ls())
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library("tidyverse")
# load relevant functions
source("functions/loadPTKExperimentData.R")
source("functions/mySummary.R")
# clear directory
rm(list=ls())
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library("tidyverse")
# load relevant functions
source("functions/loadPTKExperimentData.R")
source("functions/mySummary.R")
#get the raw data:
D <- loadPTKExperimentData(relDirPath = "input/emo_exp/")
names(D) <- c("SpId", "Emo","Word",  "MType", "SpSex", "filename", "CB", "ACC", "Resp", "RT", "Block", "TrialNo", "Experiment", "Date", "Subject")
D <- D %>% filter(Block != "practise")
View(D)
# clear directory
rm(list=ls())
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library(tidyverse) # version 1.3.1
library(ez) # version 4.4-0
library(effectsize) # 0.4.5
# load relevant functions
source("functions/tracedEZout.R")
source("functions/mySummary.R")
# set some relevant setting
options(scipen = 999) # supresses the e^-notation
#Experiment data (after some preprocessing, e.g. removing participants with too many omissions)
load(file="input/amateurs_Exp_processed.RData")
#remove participant with a Degree in Music Science
D <- subset (D, Code!="AEB56L") # instrumentalist
# each participant (N = 88) completed 312 trials, resulting in a dataset with 27456 rows
88*312
# clear directory
rm(list=ls())
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library(tidyverse) # version 1.3.1
library(ez) # version 4.4-0
library(effectsize) # 0.4.5
# load relevant functions
source("functions/tracedEZout.R")
source("functions/mySummary.R")
# set some relevant setting
options(scipen = 999) # supresses the e^-notation
#Experiment data (after some preprocessing, e.g. removing participants with too many omissions)
load(file="input/amateurs_Exp_processed.RData")
#remove participant with a Degree in Music Science
D <- subset (D, Code!="AEB56L") # instrumentalist
rep(c(1:312), 88)
D$No <- rep(c(1:312), 88)
#check if it worked:
table(D$Subject, D$No)
#check if it worked:
table(table(D$Subject, D$No))
#extract distribution of counterbalancing conditions
CB <- D[, c(2,3,10)]
CB <- unique(CB)
# capture output:
capture.output(table(CB$CB, CB$Group), file="output/sample_description/counterbalancing_amateurs.txt")
rm(CB)
#missing analysis
missings <- D %>% filter(RT == 5000)
missings <- missings %>% group_by(Code, Group) %>% summarise(N = length(RT))
missings$Percent <- round((missings$N/312 *100), 1)
capture.output(as.matrix(missings), file="output/emotion_classification/amateurs_missings.txt")
rm(missings)
#remove average trials for this analysis
D <- D %>% filter(Emo != "avg")
312*0.25
312*0.75
312-234
D <- D %>% filter(No <79 | No > 234)
table(D$No)
unique(D$No)
D$quart <- ifelse(D$No < 79, "first", "last")
#check
table(D$quart, D$No)
### aggregate data for ANOVA
D <- D %>% group_by(Subject, Group, quart) %>% summarise(ACC = mean(ACC),
N = length(Subject)) # how many trials entered each average
88 * 4 *2
88 * 2 *2
88 *2
### Define variables as appropriate data class and drop levels of factors
D$Subject <- as.factor(as.character(D$Subject))
D$Group <- as.factor(as.character(D$Group))
D <-  droplevels(D)
a<-ezANOVA(data=D, dv=.(ACC), wid=.(Subject), within = .(quart), between = .(Group), type=3, detailed = TRUE)
b = tracedEzOut(a, print = TRUE, sph.cor = "HF", mau.p = 0.05, etasq = "partial", dfsep = ", ")
check <- mySummary(D, Quart)
check <- mySummary(D, ACC, quart)
View(check)
312*50
312*0.50
D <- D %>% filter(No <157 | No > 156)
##########################################################################
## File: 02a_emotion_classification_data_analysis_amateurs_partI.R
## This script analysis the emotion classification performance of musicians and non-musicians
# authors: Christine Nussbaum (christine.nussbaum@uni-jena.de), Jessica Dethloff
# date 10/2022, 02/2024
#This is a script to check whether the first and last 25% of the trials differ in accuracy
# to check for fatigue effects
# clear directory
rm(list=ls())
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library(tidyverse) # version 1.3.1
library(ez) # version 4.4-0
library(effectsize) # 0.4.5
# load relevant functions
source("functions/tracedEZout.R")
source("functions/mySummary.R")
# set some relevant setting
options(scipen = 999) # supresses the e^-notation
#---------------------------------------------------------------------------------
#get the preprocessed data:
#Experiment data (after some preprocessing, e.g. removing participants with too many omissions)
load(file="input/amateurs_Exp_processed.RData")
#remove participant with a Degree in Music Science
D <- subset (D, Code!="AEB56L") # instrumentalist
# each participant (N = 88) completed 312 trials, resulting in a dataset with 27456 rows
## Meaning of Variables
# Subject                       individual participant code assigned by PsyToolkit
# Code                          self-generated Code by the participant
# Group                         group - 1 = singers; 2 = instrumentalists
# SpId                          speaker ID
# Emo                           speaker emotion; hap = happiness, ple = pleasure, fea = fear, sad = sadness, avg = average
# Word                          speaker pseudoword, w01 = /belam/, w02 = /molen/,   w05 = /loman/
# MType                         speaker morph type, full = full morphing, f0 = F0 morph, tbr = timbre morph
# SpSex                         speaker sex, f = female, m = male
# filename                      stimulus' filename
# CB                            counterbalancing condition (assignment of response keys to emotion)
# ACC                           accuracy: 0 = incorrect, 1 = correct
# Resp                          response (keypress -> emotion response depends on CB condition)
# RT                            reaction time (5000 corresponds to omission)
#---------------------------------------------------------------------------------------------#
#          Extract descriptive Information about emotion perception experiment                #
#---------------------------------------------------------------------------------------------#
#add Trialnr
D$No <- rep(c(1:312), 88)
#check if it worked:
table(table(D$Subject, D$No))
#extract distribution of counterbalancing conditions
CB <- D[, c(2,3,10)]
CB <- unique(CB)
# capture output:
capture.output(table(CB$CB, CB$Group), file="output/sample_description/counterbalancing_amateurs.txt")
rm(CB)
#missing analysis
missings <- D %>% filter(RT == 5000)
missings <- missings %>% group_by(Code, Group) %>% summarise(N = length(RT))
missings$Percent <- round((missings$N/312 *100), 1)
capture.output(as.matrix(missings), file="output/emotion_classification/amateurs_missings.txt")
rm(missings)
D$No <- rep(c(1:312), 88)
#check if it worked:
table(table(D$Subject, D$No))
#extract distribution of counterbalancing conditions
CB <- D[, c(2,3,10)]
CB <- unique(CB)
# capture output:
capture.output(table(CB$CB, CB$Group), file="output/sample_description/counterbalancing_amateurs.txt")
rm(CB)
#missing analysis
missings <- D %>% filter(RT == 5000)
missings <- missings %>% group_by(Code, Group) %>% summarise(N = length(RT))
missings$Percent <- round((missings$N/312 *100), 1)
capture.output(as.matrix(missings), file="output/emotion_classification/amateurs_missings.txt")
rm(missings)
#remove average trials for this analysis
D <- D %>% filter(Emo != "avg")
D <- D %>% filter(No <157 | No > 156)
##########################################################################
## File: 02a_emotion_classification_data_analysis_amateurs_partI.R
## This script analysis the emotion classification performance of musicians and non-musicians
# authors: Christine Nussbaum (christine.nussbaum@uni-jena.de), Jessica Dethloff
# date 10/2022, 02/2024
#This is a script to check whether the first and last 25% of the trials differ in accuracy
# to check for fatigue effects
# clear directory
rm(list=ls())
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library(tidyverse) # version 1.3.1
library(ez) # version 4.4-0
library(effectsize) # 0.4.5
# load relevant functions
source("functions/tracedEZout.R")
source("functions/mySummary.R")
# set some relevant setting
options(scipen = 999) # supresses the e^-notation
#---------------------------------------------------------------------------------
#get the preprocessed data:
#Experiment data (after some preprocessing, e.g. removing participants with too many omissions)
load(file="input/amateurs_Exp_processed.RData")
#remove participant with a Degree in Music Science
D <- subset (D, Code!="AEB56L") # instrumentalist
# each participant (N = 88) completed 312 trials, resulting in a dataset with 27456 rows
## Meaning of Variables
# Subject                       individual participant code assigned by PsyToolkit
# Code                          self-generated Code by the participant
# Group                         group - 1 = singers; 2 = instrumentalists
# SpId                          speaker ID
# Emo                           speaker emotion; hap = happiness, ple = pleasure, fea = fear, sad = sadness, avg = average
# Word                          speaker pseudoword, w01 = /belam/, w02 = /molen/,   w05 = /loman/
# MType                         speaker morph type, full = full morphing, f0 = F0 morph, tbr = timbre morph
# SpSex                         speaker sex, f = female, m = male
# filename                      stimulus' filename
# CB                            counterbalancing condition (assignment of response keys to emotion)
# ACC                           accuracy: 0 = incorrect, 1 = correct
# Resp                          response (keypress -> emotion response depends on CB condition)
# RT                            reaction time (5000 corresponds to omission)
#---------------------------------------------------------------------------------------------#
#          Extract descriptive Information about emotion perception experiment                #
#---------------------------------------------------------------------------------------------#
#add Trialnr
D$No <- rep(c(1:312), 88)
#check if it worked:
table(table(D$Subject, D$No))
#extract distribution of counterbalancing conditions
CB <- D[, c(2,3,10)]
CB <- unique(CB)
# capture output:
capture.output(table(CB$CB, CB$Group), file="output/sample_description/counterbalancing_amateurs.txt")
rm(CB)
#missing analysis
missings <- D %>% filter(RT == 5000)
missings <- missings %>% group_by(Code, Group) %>% summarise(N = length(RT))
missings$Percent <- round((missings$N/312 *100), 1)
capture.output(as.matrix(missings), file="output/emotion_classification/amateurs_missings.txt")
rm(missings)
#---------------------------------------------------------------------------------#
#                   Analysis of first and last 25 %                              #
#---------------------------------------------------------------------------------#
#extract emotion perception accuracy
#remove average trials for this analysis
D <- D %>% filter(Emo != "avg")
#Filter first 78 trial and last  78 (after 234)
D$quart <- ifelse(D$No < 157, "first", "last")
#check
table(D$quart, D$No)
### aggregate data for ANOVA
D <- D %>% group_by(Subject, Group, quart) %>% summarise(ACC = mean(ACC),
N = length(Subject)) # how many trials entered each average
### Define variables as appropriate data class and drop levels of factors
D$Subject <- as.factor(as.character(D$Subject))
D$Group <- as.factor(as.character(D$Group))
D <-  droplevels(D)
a<-ezANOVA(data=D, dv=.(ACC), wid=.(Subject), within = .(quart), between = .(Group), type=3, detailed = TRUE)
b = tracedEzOut(a, print = TRUE, sph.cor = "HF", mau.p = 0.05, etasq = "partial", dfsep = ", ")
check <- mySummary(D, ACC, quart)
View(check)
check <- mySummary(D, ACC, Group)
check <- mySummary(D, ACC, quart)
check <- mySummary(D, ACC, Group)
312*0.74
312*0.75
##########################################################################
## File: 02a_emotion_classification_data_analysis_amateurs_partI.R
## This script analysis the emotion classification performance of musicians and non-musicians
# authors: Christine Nussbaum (christine.nussbaum@uni-jena.de), Jessica Dethloff
# date 10/2022, 02/2024
#This is a script to check whether the first and last 25% of the trials differ in accuracy
# to check for fatigue effects
# clear directory
rm(list=ls())
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library(tidyverse) # version 1.3.1
library(ez) # version 4.4-0
library(effectsize) # 0.4.5
# load relevant functions
source("functions/tracedEZout.R")
source("functions/mySummary.R")
# set some relevant setting
options(scipen = 999) # supresses the e^-notation
#---------------------------------------------------------------------------------
#get the preprocessed data:
#Experiment data (after some preprocessing, e.g. removing participants with too many omissions)
load(file="input/amateurs_Exp_processed.RData")
#remove participant with a Degree in Music Science
D <- subset (D, Code!="AEB56L") # instrumentalist
# each participant (N = 88) completed 312 trials, resulting in a dataset with 27456 rows
## Meaning of Variables
# Subject                       individual participant code assigned by PsyToolkit
# Code                          self-generated Code by the participant
# Group                         group - 1 = singers; 2 = instrumentalists
# SpId                          speaker ID
# Emo                           speaker emotion; hap = happiness, ple = pleasure, fea = fear, sad = sadness, avg = average
# Word                          speaker pseudoword, w01 = /belam/, w02 = /molen/,   w05 = /loman/
# MType                         speaker morph type, full = full morphing, f0 = F0 morph, tbr = timbre morph
# SpSex                         speaker sex, f = female, m = male
# filename                      stimulus' filename
# CB                            counterbalancing condition (assignment of response keys to emotion)
# ACC                           accuracy: 0 = incorrect, 1 = correct
# Resp                          response (keypress -> emotion response depends on CB condition)
# RT                            reaction time (5000 corresponds to omission)
#---------------------------------------------------------------------------------------------#
#          Extract descriptive Information about emotion perception experiment                #
#---------------------------------------------------------------------------------------------#
#add Trialnr
D$No <- rep(c(1:312), 88)
#check if it worked:
table(table(D$Subject, D$No))
#extract distribution of counterbalancing conditions
CB <- D[, c(2,3,10)]
CB <- unique(CB)
# capture output:
capture.output(table(CB$CB, CB$Group), file="output/sample_description/counterbalancing_amateurs.txt")
rm(CB)
#missing analysis
missings <- D %>% filter(RT == 5000)
missings <- missings %>% group_by(Code, Group) %>% summarise(N = length(RT))
missings$Percent <- round((missings$N/312 *100), 1)
capture.output(as.matrix(missings), file="output/emotion_classification/amateurs_missings.txt")
rm(missings)
#---------------------------------------------------------------------------------#
#                   Analysis of first and last 25 %                              #
#---------------------------------------------------------------------------------#
#remove average trials for this analysis
D <- D %>% filter(Emo != "avg")
D <- D %>% filter(No <79 | No > 234)
D$quart <- ifelse(D$No < 79, "first", "last")
#check
table(D$quart, D$No)
### aggregate data for ANOVA
D <- D %>% group_by(Subject, Group, quart) %>% summarise(ACC = mean(ACC),
N = length(Subject)) # how many trials entered each average
### Define variables as appropriate data class and drop levels of factors
D$Subject <- as.factor(as.character(D$Subject))
D$Group <- as.factor(as.character(D$Group))
D <-  droplevels(D)
a<-ezANOVA(data=D, dv=.(ACC), wid=.(Subject), within = .(quart), between = .(Group), type=3, detailed = TRUE)
b = tracedEzOut(a, print = TRUE, sph.cor = "HF", mau.p = 0.05, etasq = "partial", dfsep = ", ")
check <- mySummary(D, ACC, quart)
check <- mySummary(D, ACC, Group)
check <- mySummary(D, ACC, quart)
check2 <- mySummary(D, ACC, Group)
View(check)
View(check2)
